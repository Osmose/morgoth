machine:
  services:
    - postgresql
    - docker

dependencies:
  cache_directories:
    - "~/cache/"
  override:
    - docker info
    # use circleci's docker cache workaround
    - if [ -e ~/cache/docker/image.tar ]; then echo "Loading image.tar"; docker load -i ~/cache/docker/image.tar || rm ~/cache/docker/image.tar; fi
    # build image
    - docker build -t morgoth:build .
    # Clean up old image and save the new one
    - mkdir -p ~/cache/docker; test '!' -e ~/cache/docker/image.tar || rm ~/cache/docker/image.tar; docker save morgoth:build > ~/cache/docker/image.tar; ls -l ~/cache/docker

test:
  pre:
    - chmod -R 777 $CIRCLE_TEST_REPORTS
  override:
    - >
      docker run -v $CIRCLE_TEST_REPORTS:/test_artifacts
      morgoth:build flake8 --output-file /test_artifacts/flake8.txt morgoth
    - >
      docker run --net host -e DJANGO_CONFIGURATION=Test
      -v $CIRCLE_TEST_REPORTS:/test_artifacts
      morgoth:build py.test --junitxml=/test_artifacts/pytest.xml
  post:
    - >
      docker run -v $CIRCLE_TEST_REPORTS:/test_artifacts
      morgoth:build flake8_junit /test_artifacts/flake8.txt /test_artifacts/flake8.xml
