machine:
  services:
    - postgresql
    - docker

dependencies:
  cache_directories:
    - "~/cache/"
  override:
    # create a version.json per https://github.com/mozilla-services/Dockerflow/blob/master/docs/version_object.md
    - >
        printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n'
        "$CIRCLE_SHA1"
        "$CIRCLE_TAG"
        "$CIRCLE_PROJECT_USERNAME"
        "$CIRCLE_PROJECT_REPONAME"
        "$CIRCLE_BUILD_URL" > version.json
    - cp version.json $CIRCLE_ARTIFACTS
    - docker info
    # use circleci's docker cache workaround
    - mkdir -p ~/cache/
    - if [ -e ~/cache/docker/image.tar ]; then echo "Loading image.tar"; docker load -i ~/cache/docker/image.tar || rm ~/cache/docker/image.tar; fi
    # build image
    - docker build -t morgoth:build .
    # write the sha256 sum to an artifact to make image verification easier
    - docker inspect -f '{{.Config.Image}}' morgoth:build | tee $CIRCLE_ARTIFACTS/docker-image-shasum256.txt

test:
  pre:
    - chmod -R 777 $CIRCLE_TEST_REPORTS
  override:
    # Run lint checks
    - bin/ci/docker-run.sh therapist run --use-tracked-files
    # Run Python tests
    - bin/ci/docker-run.sh py.test --junitxml=/test_artifacts/pytest.xml morgoth/
  post:
    # Clean up old image and save the new one
    - >
      mkdir -p ~/cache/docker;
      rm -f ~/cache/docker/image.tar;
      docker save morgoth:build > ~/cache/docker/image.tar;
      ls -l ~/cache/docker

# appropriately tag and push the container to dockerhub
deployment:
  latest:
    branch: master
    commands:
      # set DOCKER_DEPLOY=true in Circle UI to do deploys
      - "${DOCKER_DEPLOY:-false}"
      - bin/ci/deploy-dockerhub.sh latest

  tags:
    # push all tags
    tag: /.*/
    commands:
      # set DOCKER_DEPLOY=true in Circle UI to do deploys
      - "${DOCKER_DEPLOY:-false}"
      - bin/ci/deploy-dockerhub.sh "$CIRCLE_TAG"
